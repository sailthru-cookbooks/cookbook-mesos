# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrant plugins required:
# vagrant-berkshelf, vagrant-omnibus, vagrant-hosts, vagrant-cachier
Vagrant.configure("2") do |config|
  config.vm.box = "Official Ubuntu 13.04 daily Cloud Image amd64 (No Guest Additions)"
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/raring/current/raring-server-cloudimg-amd64-vagrant-disk1.box"

  # enable plugins
  config.berkshelf.enabled = true
  config.omnibus.chef_version = :latest

  # if you want to use vagrant-cachier,
  # please activate below.
  config.cache.auto_detect = true

  # please customize hostname and private ip configuration if you needed.
  config.vm.hostname = "mesos"
  private_ip = "192.168.33.10"
  config.vm.network :private_network, ip: private_ip
  config.vm.provision :hosts do |provisioner|
    provisioner.add_host private_ip , [ config.vm.hostname ]
  end

  # for mesos web UI.
  config.vm.network :forwarded_port, guest: 5050, host: 5050
  # for marathon web UI.
  config.vm.network :forwarded_port, guest: 8080, host: 8080

  config.vm.provider :virtualbox do |vb|
    vb.name = 'cookbook-mesos-sample-mesosphere'
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "#{1024*2}"]
#    vb.customize ["modifyvm", :id,  "--cpus",  "2"]
  end

  config.vm.provision :shell do |s|
      s.path = "scripts/populate_sshkey.sh"
      s.args = "/home/vagrant vagrant"
  end

  config.vm.provision :chef_solo do |chef|
    # chef.log_level = :debug
    chef.add_recipe "mesos"
    chef.add_recipe "mesos::master"
    chef.add_recipe "mesos::slave"

    # mesos-docker executor
    # The docker cookbook doesn't install aufs or lxc when using the "package" install method.
    # So, let's force the package installation
    chef.add_recipe "docker::aufs"
    chef.add_recipe "docker::lxc"
    chef.add_recipe "docker"     # workaround : include_recipe in docker-executor recipe doesn't work
    chef.add_recipe "mesos::docker-executor"

    # for marathon framework
#    chef.add_recipe "maven"

    # You may also specify custom JSON attributes:
    chef.json = {
      :mesos => {
        :type         => "mesosphere",
        :mesosphere => {
          :with_zookeeper => true
        },
        # command line options for mesos-master
        :master => {
          :zk => "zk://localhost:2181/mesos",
          :log_dir => "/var/log/mesos",
          :cluster => "MyCluster"
        },
        # command line options for mesos-slave
        :slave =>{
          :master => "zk://localhost:2181/mesos",
          :isolation => "process",  # mesos currently doesn't support cgroups isolation while using docker (see https://github.com/mesosphere/mesos-docker/issues/5)
          :log_dir => "/var/log/mesos",
          :work_dir => "/var/run/work"
        },
        # below ip lists are for meoss-[start|stop]-cluster.sh
        :master_ips => ["localhost"],
        :slave_ips  => ["localhost"]
      },
      :maven => {
        :version => "3",
        "3" => {
          :version => "3.0.5"
        },
        :mavenrc => {
          :opts => "-Dmaven.repo.local=$HOME/.m2/repository -Xmx384m -XX:MaxPermSize=192m"
        }
      }
    }
  end

# marathon install script
#  script = <<SCRIPT
#  wget https://github.com/mesosphere/marathon/archive/marathon-0.2.1.zip
#  unzip marathon-0.2.1.zip
#  cd marathon-marathon-0.2.1
#  mvn package
#  ./bin/start --master zk://localhost:2181/mesos  --zk_hosts localhost:2181 &
# SCRIPT
#  config.vm.provision "shell", inline: script

end
